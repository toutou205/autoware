ARG AUTOWARE_DOCKER_ARCH
ARG AUTOWARE_TARGET_ARCH
FROM multiarch/alpine:${AUTOWARE_TARGET_ARCH}-latest-stable AS bootstrap

FROM ${AUTOWARE_DOCKER_ARCH}/ros:melodic-perception AS sysroot
ARG AUTOWARE_TARGET_ARCH

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

COPY --from=bootstrap /usr/bin/qemu-${AUTOWARE_TARGET_ARCH}-static /usr/bin/qemu-${AUTOWARE_TARGET_ARCH}-static

# ignore pinning package versions for apt
# hadolint ignore=DL3008
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    lsb-release \
    python-rosdep \
    sudo \
    gnupg && \
    rm -rf /var/lib/apt/lists/*

# Install dependent packages used by Autoware
COPY ./dependencies /tmp/dependencies
RUN apt-get update && \
    sed "s/\$ROS_DISTRO/$ROS_DISTRO/g" "/tmp/dependencies" | xargs apt-get install -y --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*

# hadolint ignore=SC2156
RUN find / -depth -xdev -type l -lname '/*' -exec sh -c 'linkpath="$(readlink {})" && rm -f {} && ln -frsv "$linkpath" "{}"' \;

FROM ros:melodic-ros-core AS builder
ARG AUTOWARE_TARGET_ARCH
ARG AUTOWARE_TARGET_PLATFORM

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

ENV AUTOWARE_SYSROOT /sysroot/${AUTOWARE_TARGET_PLATFORM}
COPY --from=sysroot /lib ${AUTOWARE_SYSROOT}/lib
COPY --from=sysroot /usr/include ${AUTOWARE_SYSROOT}/usr/include
COPY --from=sysroot /usr/lib ${AUTOWARE_SYSROOT}/usr/lib
COPY --from=sysroot /usr/share/OGRE ${AUTOWARE_SYSROOT}/usr/share/OGRE
COPY --from=sysroot /usr/share/OpenCV ${AUTOWARE_SYSROOT}/usr/share/OpenCV
COPY --from=sysroot /usr/share/pkgconfig ${AUTOWARE_SYSROOT}/usr/share/pkgconfig
COPY --from=sysroot /opt ${AUTOWARE_SYSROOT}/opt
COPY --from=sysroot /etc/alternatives ${AUTOWARE_SYSROOT}/etc/alternatives

# Fix Bionic-specific issues
# ignore pinning package versions for apt
# hadolint ignore=DL3008
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    tzdata \
    gnupg && \
    rm -rf /var/lib/apt/lists/*

COPY ./cross-dependencies /tmp/cross-dependencies
# ignore pinning package versions for apt and pip
# hadolint ignore=DL3008,DL3013
RUN apt-get update && \
    sed "s/\$ROS_DISTRO/$ROS_DISTRO/g" "/tmp/cross-dependencies" | xargs apt-get install -y --no-install-recommends && \
    rm -rf /var/lib/apt/lists/* && \
    pip3 install -U --no-cache-dir setuptools

RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/share/ -name "*.cmake" -type f -exec sed -i -e "s#/opt/ros/melodic/include#${AUTOWARE_SYSROOT}/opt/ros/melodic/include#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/share/ -name "*.cmake" -type f -exec sed -i -e "s#/opt/ros/melodic/lib#${AUTOWARE_SYSROOT}/opt/ros/melodic/lib#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/share/ -name "*.cmake" -type f -exec sed -i -e "s#/opt/ros/melodic/share#${AUTOWARE_SYSROOT}/opt/ros/melodic/share#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/share/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/include#${AUTOWARE_SYSROOT}/usr/include#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/share/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/lib#${AUTOWARE_SYSROOT}/usr/lib#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/usr/lib/cmake/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu#${AUTOWARE_SYSROOT}/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/usr/lib/cmake/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/lib/openmpi#${AUTOWARE_SYSROOT}/usr/lib/openmpi#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/usr/lib/cmake/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/include#${AUTOWARE_SYSROOT}/usr/include#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu/cmake/ -name "*.cmake" -type f -exec sed -i -e "s#/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu#${AUTOWARE_SYSROOT}/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/lib/pkgconfig/ -name "*.pc" -type f -exec sed -i -e "s#-I/opt/ros/melodic/usr/include#-I${AUTOWARE_SYSROOT}/opt/ros/melodic/usr/include#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/opt/ros/melodic/lib/pkgconfig/ -name "*.pc" -type f -exec sed -i -e "s#-I/usr/include#-I${AUTOWARE_SYSROOT}/usr/include#g" {} \;
RUN find ${AUTOWARE_SYSROOT}/ -name "*.pc" -type f -exec sed -i -e "s#prefix=/#prefix=${AUTOWARE_SYSROOT}/#g" {} \;
RUN sed -i -e "s#/usr#${AUTOWARE_SYSROOT}/usr#g" ${AUTOWARE_SYSROOT}/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu/cmake/pcl/PCLConfig.cmake
RUN sed -i -e "s#set(imported_location \"\${_qt5Widgets_install_prefix}/lib/qt5/bin/uic\")#set(imported_location \"/usr/lib/x86_64-linux-gnu/qt5/bin/uic\")#g" \
    ${AUTOWARE_SYSROOT}/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu/cmake/Qt5Widgets/Qt5WidgetsConfigExtras.cmake
RUN sed -i -e "s#set(imported_location \"\${_qt5Core_install_prefix}/lib/qt5/bin/#set(imported_location \"/usr/lib/x86_64-linux-gnu/qt5/bin/#g" \
    ${AUTOWARE_SYSROOT}/usr/lib/${AUTOWARE_TARGET_ARCH}-linux-gnu/cmake/Qt5Core/Qt5CoreConfigExtras.cmake
RUN sed -i -e "s#define ARMA_SUPERLU_INCLUDE_DIR /usr/include/superlu/#define ARMA_SUPERLU_INCLUDE_DIR ${AUTOWARE_SYSROOT}/usr/include/superlu/#g" \
    ${AUTOWARE_SYSROOT}/usr/include/armadillo_bits/config.hpp

ENV ROS_DISTRO melodic
ENV CC /usr/bin/${AUTOWARE_TARGET_ARCH}-linux-gnu-gcc
ENV CXX /usr/bin/${AUTOWARE_TARGET_ARCH}-linux-gnu-g++
ENV AR /usr/bin/${AUTOWARE_TARGET_ARCH}-linux-gnu-ar
ENV CPP /usr/bin/${AUTOWARE_TARGET_ARCH}-linux-gnu-cpp

CMD [". /opt/ros/melodic/setup.sh && /bin/bash"]
